# Get Mouse Points
$signatures = @'
[DllImport("user32.dll", CharSet=CharSet.Auto, ExactSpelling=true)] 
public static extern short GetAsyncKeyState(int virtualKeyCode); 
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int GetKeyboardState(byte[] keystate);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int MapVirtualKey(uint uCode, int uMapType);
[DllImport("user32.dll", CharSet=CharSet.Auto)]
public static extern int ToUnicode(uint wVirtKey, uint wScanCode, byte[] lpkeystate, System.Text.StringBuilder pwszBuff, int cchBuff, uint wFlags);
'@
$API = Add-Type -MemberDefinition $signatures -Name 'Win32' -Namespace API -PassThru
Add-Type -AssemblyName System.Windows.Forms
[string]$xstr = "`$p1 = @("
[string]$ystr = "`$p2 = @("
while ($true) {
    Start-Sleep -Milliseconds 100
    if ($API::GetAsyncKeyState(80)) { # P Key status
        $X = [System.Windows.Forms.Cursor]::Position.X
        $Y = [System.Windows.Forms.Cursor]::Position.Y
        Write-Host "Captured X: $X | Y: $Y"
        $xstr += "`"$X`","; $ystr += "q`"$Y`","
    }
    if ($API::GetAsyncKeyState(81)) { # P qKey status
        Write-Host " "
        $xstr -Replace ',$',')'; $ystr -Replace ',$',')'
        break
    }
}



# Mouse Click
Add-Type -MemberDefinition '[DllImport("user32.dll")] public static extern void mouse_event(int flags, int dx, int dy, int cButtons, int info);' -Name U32 -Namespace W;

foreach($i in 0..($p1.Count - 1)) {
    [System.Windows.Forms.Cursor]::Position = New-Object System.Drawing.Point($p1[$i], $p2[$i])
    [W.U32]::mouse_event(6,0,0,0,0);
    Start-Sleep -Milliseconds 250
}
